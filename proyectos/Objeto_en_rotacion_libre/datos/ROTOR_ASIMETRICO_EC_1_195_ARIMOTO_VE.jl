using DifferentialEquations
using Plots
using LinearAlgebra
using DataFrames
using CSV
using LaTeXStrings
using JSON


#function rotor!(du,u,p,t)
#du[1]=u[2]
#du[2]=((u[4])*(cos((u[3]))*(5.8E-8*sin((u[5]))^2+5.7E-8*cos((u[5]))^2+2.3E-8)*(u[6])+cos((u[3]))*sin((u[3]))*((-8.9E-10*(u[2])*cos((u[5]))^2)-3.6E-10*(u[2])))+cos((u[3]))^2*(1.4E-7*(u[2])*cos((u[5]))*sin((u[5]))^3+(1.4E-7*(u[2])*cos((u[5]))^3-1.4E-7*(u[2])*cos((u[5])))*sin((u[5])))*(u[6])+8.9E-10*(u[2])^2*cos((u[3]))^2*sin((u[3]))*cos((u[5]))*sin((u[5])))/(cos((u[3]))^2*(7.2E-8*cos((u[5]))^2*sin((u[5]))^2+7.2E-8*cos((u[5]))^4+5.7E-8*cos((u[5]))^2+1.1E-8)-1.2E-7*cos((u[5]))^2+sin((u[3]))^2*(1.2E-7*cos((u[5]))^2+5.2E-8)-5.2E-8)
#du[3]=u[4]
#du[4]=((u[4])*(cos((u[3]))^2*(1.4E-7*cos((u[5]))*sin((u[5]))^3+(1.4E-7*cos((u[5]))^3+1.1E-7*cos((u[5])))*sin((u[5])))*(u[6])+2.5E-7*sin((u[3]))^2*cos((u[5]))*sin((u[5]))*(u[6])-2.5E-7*cos((u[5]))*sin((u[5]))*(u[6])-8.9E-10*(u[2])*cos((u[3]))^2*sin((u[3]))*cos((u[5]))*sin((u[5])))+cos((u[3]))*(2.5E-7*(u[2])*sin((u[5]))^2-3.6E-7*(u[2]))*(u[6])+cos((u[3]))^3*((-5.6E-8*(u[2])*sin((u[5]))^2)+2.0E-7*(u[2])*cos((u[5]))^2+7.8E-8*(u[2]))*(u[6])+cos((u[3]))*sin((u[3]))^2*(3.6E-7*(u[2])-2.5E-7*(u[2])*sin((u[5]))^2)*(u[6])+sin((u[3]))*(cos((u[3]))^3*(7.2E-8*(u[2])^2*cos((u[5]))^2*sin((u[5]))^2+7.2E-8*(u[2])^2*cos((u[5]))^4+5.6E-8*(u[2])^2*cos((u[5]))^2+1.1E-8*(u[2])^2)+cos((u[3]))*((-1.2E-7*(u[2])^2*cos((u[5]))^2)-5.0E-8*(u[2])^2))+cos((u[3]))*sin((u[3]))^3*(1.2E-7*(u[2])^2*cos((u[5]))^2+5.0E-8*(u[2])^2))/(cos((u[3]))^2*(7.2E-8*cos((u[5]))^2*sin((u[5]))^2+7.2E-8*cos((u[5]))^4+5.7E-8*cos((u[5]))^2+1.1E-8)-1.2E-7*cos((u[5]))^2+sin((u[3]))^2*(1.2E-7*cos((u[5]))^2+5.2E-8)-5.2E-8)
#du[5]=u[6]
#du[6]=-(1.0*((u[4])*(cos((u[3]))*sin((u[3]))*(2.8E-11*sin((u[5]))^2+2.7E-11*cos((u[5]))^2+1.1E-11)*(u[6])+cos((u[3]))^3*((-3.8E-11*(u[2])*cos((u[5]))^2*sin((u[5]))^4)+((-3.8E-11*(u[2])*cos((u[5]))^4)+2.3E-11*(u[2])*cos((u[5]))^2-6.1E-12*(u[2]))*sin((u[5]))^2+5.4E-11*(u[2])*cos((u[5]))^4+4.2E-11*(u[2])*cos((u[5]))^2+8.5E-12*(u[2]))+cos((u[3]))*((6.9E-11*(u[2])*cos((u[5]))^2+2.8E-11*(u[2]))*sin((u[5]))^2-9.6E-11*(u[2])*cos((u[5]))^2-3.9E-11*(u[2]))+cos((u[3]))*sin((u[3]))^2*(((-6.9E-11*(u[2])*cos((u[5]))^2)-2.8E-11*(u[2]))*sin((u[5]))^2+9.6E-11*(u[2])*cos((u[5]))^2+3.8E-11*(u[2])))+cos((u[3]))^2*sin((u[3]))*(6.9E-11*(u[2])*cos((u[5]))*sin((u[5]))^3+(6.9E-11*(u[2])*cos((u[5]))^3-6.8E-11*(u[2])*cos((u[5])))*sin((u[5])))*(u[6])+(u[4])^2*(cos((u[3]))^2*(1.9E-11*cos((u[5]))^3*sin((u[5]))^3+(1.9E-11*cos((u[5]))^5+1.5E-11*cos((u[5]))^3+3.0E-12*cos((u[5])))*sin((u[5])))+sin((u[3]))^2*(3.4E-11*cos((u[5]))^3+1.4E-11*cos((u[5])))*sin((u[5]))+((-3.4E-11*cos((u[5]))^3)-1.4E-11*cos((u[5])))*sin((u[5])))+cos((u[3]))^4*(((-1.9E-11*(u[2])^2*cos((u[5]))^5)-1.5E-11*(u[2])^2*cos((u[5]))^3-3.0E-12*(u[2])^2*cos((u[5])))*sin((u[5]))-1.9E-11*(u[2])^2*cos((u[5]))^3*sin((u[5]))^3)+cos((u[3]))^2*(3.4E-11*(u[2])^2*cos((u[5]))^3+1.4E-11*(u[2])^2*cos((u[5])))*sin((u[5]))+cos((u[3]))^2*sin((u[3]))^2*((-3.4E-11*(u[2])^2*cos((u[5]))^3)-1.3E-11*(u[2])^2*cos((u[5])))*sin((u[5]))))/(cos((u[3]))^2*(3.4E-11*cos((u[5]))^2*sin((u[5]))^2+3.4E-11*cos((u[5]))^4+2.7E-11*cos((u[5]))^2+5.4E-12)-6.2E-11*cos((u[5]))^2+sin((u[3]))^2*(6.2E-11*cos((u[5]))^2+2.5E-11)-2.5E-11)
#end

function rotor!(du,u,p,t)

I11=1.083333333333333*10^(-4)
I22=3.766666666666666*10^(-4)
I33=4.816666666666666*10^(-4)


du[1]=u[2]
du[2]=((u[4])*(cos((u[3]))*(u[6])*(cos((u[5]))^2*((I22-I11)*I33-I22^2+2*I11*I22-I11^2)+I11*I33+sin((u[5]))^2*(2*I11*I22-2*I11^2)-I11*I22+I11^2)+cos((u[3]))*sin((u[3]))*((u[2])*cos((u[5]))^2*((I22-I11)*I33-I22^2+I11^2)+(u[2])*(I11*I33-I11*I22-I11^2)))+cos((u[3]))^2*(u[6])*(sin((u[5]))*((u[2])*cos((u[5]))*((I11-I22)*I33-I22^2+4*I11*I22-3*I11^2)+(u[2])*cos((u[5]))^3*(2*I22^2-4*I11*I22+2*I11^2))+(u[2])*cos((u[5]))*sin((u[5]))^3*(2*I22^2-4*I11*I22+2*I11^2))+(u[2])^2*cos((u[3]))^2*sin((u[3]))*cos((u[5]))*sin((u[5]))*((I11-I22)*I33+I22^2-I11^2))/(cos((u[3]))^2*(cos((u[5]))^2*((I22-I11)*I33-I22^2+2*I11*I22-I11^2)+I11*I33+cos((u[5]))^2*sin((u[5]))^2*(I22^2-2*I11*I22+I11^2)+cos((u[5]))^4*(I22^2-2*I11*I22+I11^2)-I11*I22)+sin((u[3]))^2*(cos((u[5]))^2*(I22-I11)*I33+I11*I33)+cos((u[5]))^2*(I11-I22)*I33-I11*I33)
du[3]=u[4]
du[4]=(sin((u[3]))*(cos((u[3]))^3*((u[2])^2*(I33^2-2*I22*I33+I22^2)+(u[2])^2*cos((u[5]))^2*((2*I22-2*I11)*I33-2*I22^2+2*I11*I22)+(u[2])^2*cos((u[5]))^2*sin((u[5]))^2*(I22^2-2*I11*I22+I11^2)+(u[2])^2*cos((u[5]))^4*(I22^2-2*I11*I22+I11^2))+cos((u[3]))*((u[2])^2*(I22*I33-I33^2)+(u[2])^2*cos((u[5]))^2*(I11-I22)*I33))+cos((u[3]))*sin((u[3]))^2*(u[6])*((u[2])*(I33^2+(I22-I11)*I33)+(u[2])*sin((u[5]))^2*(2*I11-2*I22)*I33)+cos((u[3]))*sin((u[3]))^3*((u[2])^2*(I33^2-I22*I33)+(u[2])^2*cos((u[5]))^2*(I22-I11)*I33)+cos((u[3]))^3*(u[6])*((u[2])*(I33^2-I11*I33-I22^2+I11*I22)+(u[2])*cos((u[5]))^2*((I22-I11)*I33+I22^2-2*I11*I22+I11^2)+(u[2])*sin((u[5]))^2*((2*I11-2*I22)*I33+2*I22^2-2*I11*I22))+cos((u[3]))*(u[6])*((u[2])*((I11-I22)*I33-I33^2)+(u[2])*sin((u[5]))^2*(2*I22-2*I11)*I33)+(u[4])*(cos((u[3]))^2*(u[6])*(sin((u[5]))*(cos((u[5]))*((3*I22-3*I11)*I33-3*I22^2+4*I11*I22-I11^2)+cos((u[5]))^3*(2*I22^2-4*I11*I22+2*I11^2))+cos((u[5]))*sin((u[5]))^3*(2*I22^2-4*I11*I22+2*I11^2))+(u[2])*cos((u[3]))^2*sin((u[3]))*cos((u[5]))*sin((u[5]))*((I22-I11)*I33-I22^2+I11^2)+sin((u[3]))^2*cos((u[5]))*sin((u[5]))*(u[6])*(2*I22-2*I11)*I33+cos((u[5]))*sin((u[5]))*(u[6])*(2*I11-2*I22)*I33))/(cos((u[3]))^2*(cos((u[5]))^2*((I22-I11)*I33-I22^2+2*I11*I22-I11^2)+I11*I33+cos((u[5]))^2*sin((u[5]))^2*(I22^2-2*I11*I22+I11^2)+cos((u[5]))^4*(I22^2-2*I11*I22+I11^2)-I11*I22)+sin((u[3]))^2*(cos((u[5]))^2*(I22-I11)*I33+I11*I33)+cos((u[5]))^2*(I11-I22)*I33-I11*I33)
du[5]=u[6]
du[6]=-((u[4])*(cos((u[3]))*sin((u[3]))^2*((u[2])*cos((u[5]))^2*((2*I22-2*I11)*I33^2+(2*I11^2-2*I11*I22)*I33)+(u[2])*(2*I11*I33^2-2*I11^2*I33)+sin((u[5]))^2*((u[2])*cos((u[5]))^2*((-2*I22^2)+4*I11*I22-2*I11^2)*I33+(u[2])*(2*I11^2-2*I11*I22)*I33))+cos((u[3]))*sin((u[3]))*(u[6])*(cos((u[5]))^2*((I22-I11)*I33^2+((-I22^2)+2*I11*I22-I11^2)*I33)+I11*I33^2+sin((u[5]))^2*(2*I11*I22-2*I11^2)*I33+(I11^2-I11*I22)*I33)+cos((u[3]))^3*((u[2])*cos((u[5]))^2*((I22-I11)*I33^2-I22^3+3*I11*I22^2-3*I11^2*I22+I11^3)+(u[2])*(I11*I33^2-I11^2*I33-I11*I22^2+I11^2*I22)+sin((u[5]))^2*((u[2])*cos((u[5]))^2*(((-I22^2)+2*I11*I22-I11^2)*I33+3*I22^3-9*I11*I22^2+9*I11^2*I22-3*I11^3)+(u[2])*((2*I11^2-2*I11*I22)*I33+2*I11*I22^2-2*I11^2*I22)+(u[2])*cos((u[5]))^4*((-2*I22^3)+6*I11*I22^2-6*I11^2*I22+2*I11^3))+(u[2])*cos((u[5]))^4*((I22^2-2*I11*I22+I11^2)*I33+I22^3-3*I11*I22^2+3*I11^2*I22-I11^3)+(u[2])*cos((u[5]))^2*sin((u[5]))^4*((-2*I22^3)+6*I11*I22^2-6*I11^2*I22+2*I11^3))+cos((u[3]))*((u[2])*cos((u[5]))^2*((I11-I22)*I33^2+((-I22^2)+2*I11*I22-I11^2)*I33)+(u[2])*((I11^2-I11*I22)*I33-I11*I33^2)+sin((u[5]))^2*((u[2])*cos((u[5]))^2*(2*I22^2-4*I11*I22+2*I11^2)*I33+(u[2])*(2*I11*I22-2*I11^2)*I33)))+cos((u[3]))^2*sin((u[3]))*(u[6])*(sin((u[5]))*((u[2])*cos((u[5]))*((I11-I22)*I33^2+((-I22^2)+4*I11*I22-3*I11^2)*I33)+(u[2])*cos((u[5]))^3*(2*I22^2-4*I11*I22+2*I11^2)*I33)+(u[2])*cos((u[5]))*sin((u[5]))^3*(2*I22^2-4*I11*I22+2*I11^2)*I33)+cos((u[3]))^2*sin((u[3]))^2*sin((u[5]))*((u[2])^2*cos((u[5]))*((I11-I22)*I33^2+(I22^2-I11*I22)*I33)+(u[2])^2*cos((u[5]))^3*((-I22^2)+2*I11*I22-I11^2)*I33)+(u[4])^2*(cos((u[3]))^2*(sin((u[5]))*(cos((u[5]))^3*((I22^2-2*I11*I22+I11^2)*I33-I22^3+3*I11*I22^2-3*I11^2*I22+I11^3)+cos((u[5]))*((I11*I22-I11^2)*I33-I11*I22^2+I11^2*I22)+cos((u[5]))^5*(I22^3-3*I11*I22^2+3*I11^2*I22-I11^3))+cos((u[5]))^3*sin((u[5]))^3*(I22^3-3*I11*I22^2+3*I11^2*I22-I11^3))+sin((u[3]))^2*sin((u[5]))*(cos((u[5]))^3*(I22^2-2*I11*I22+I11^2)*I33+cos((u[5]))*(I11*I22-I11^2)*I33)+sin((u[5]))*(cos((u[5]))^3*((-I22^2)+2*I11*I22-I11^2)*I33+cos((u[5]))*(I11^2-I11*I22)*I33))+cos((u[3]))^4*(sin((u[5]))*((u[2])^2*cos((u[5]))^3*(((-I22^2)+2*I11*I22-I11^2)*I33+I22^3-3*I11*I22^2+3*I11^2*I22-I11^3)+(u[2])^2*cos((u[5]))*((I11^2-I11*I22)*I33+I11*I22^2-I11^2*I22)+(u[2])^2*cos((u[5]))^5*((-I22^3)+3*I11*I22^2-3*I11^2*I22+I11^3))+(u[2])^2*cos((u[5]))^3*sin((u[5]))^3*((-I22^3)+3*I11*I22^2-3*I11^2*I22+I11^3))+cos((u[3]))^2*sin((u[5]))*((u[2])^2*cos((u[5]))^3*(I22^2-2*I11*I22+I11^2)*I33+(u[2])^2*cos((u[5]))*(I11*I22-I11^2)*I33))/(cos((u[3]))^2*(cos((u[5]))^2*((I22-I11)*I33^2+((-I22^2)+2*I11*I22-I11^2)*I33)+I11*I33^2+cos((u[5]))^2*sin((u[5]))^2*(I22^2-2*I11*I22+I11^2)*I33+cos((u[5]))^4*(I22^2-2*I11*I22+I11^2)*I33-I11*I22*I33)+sin((u[3]))^2*(cos((u[5]))^2*(I22-I11)*I33^2+I11*I33^2)+cos((u[5]))^2*(I11-I22)*I33^2-I11*I33^2)
end


u1_0=0.0
du1_0=0.01

u2_0=0.0
du2_0=1.0

u3_0=0.01
du3_0=0.0

u0=[u1_0,du1_0,u2_0,du2_0,u3_0,du3_0]
tspan = (0.0,10.0)
prob = ODEProblem(rotor!,u0,tspan,dt=0.001,saveat=0.001)
sol = solve(prob)
df=DataFrame(sol)
json_str = JSON.json(df)

# write the JSON string to a file
open("datos_rotor.json", "w") do io
    write(io, json_str)
end

#CSV.write("datos_rotor.csv",df)

pos=plot(sol,idxs=[1,3,5],label=[L"$x_1$" L"$x_3$" L"$x_5$"],linewidth=2)
#vel=plot(sol,idxs=[2,4,6])

display(pos)
#display(vel)
